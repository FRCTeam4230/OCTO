// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc4230.OCTO.commands;

import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc4230.OCTO.Robot;
import org.usfirst.frc4230.OCTO.RobotMap;

/**
 *
 */
public class Shoot extends Command {

	double position = 0.25;
	boolean toggleUp = false;
	boolean toggleDown = false;
	double speed = 3500.0;
	final double MIN = 0.0;
	final double MAX = 5800;
	double distance;
	double trim;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public Shoot() {

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.shooter);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize() {
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		if (Robot.oi.operator.getPOV() == 270) {
			if (!toggleUp) {
				toggleUp = true;
				if (speed < MAX) {
					speed = speed + 50.0;
				}
			}
		} else {
			toggleUp = false;
		}

		if (Robot.oi.operator.getPOV() == 90) {
			if (!toggleDown) {
				toggleDown = true;
				if (speed > MIN) {
					speed = speed - 50.0;
				}
			}
		} else {
			toggleDown = false;
		}

		if (Robot.oi.driver.getRawAxis(2) > 0.6) {
			RobotMap.shooterFlyWheel.set(speed * -1);
			RobotMap.gearFlappersLight.set(Relay.Value.kForward);
		} else {
			RobotMap.shooterFlyWheel.set(0);
		}

		if (Robot.oi.driver.getRawAxis(3) > 0.1) {
			RobotMap.shooterFeeder.set(-0.3);
		} else {
			RobotMap.shooterFeeder.set(0.0);
		}

		SmartDashboard.putNumber("Shooter Speed", speed);
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return false;
	}

	// Called once after isFinished returns true
	protected void end() {
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
	}
}
